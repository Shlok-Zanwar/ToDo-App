[{"C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\index.js":"1","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\App.js":"2","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\TodoForm.js":"3","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\TodoList.js":"4","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Todo.js":"5","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Doing.js":"6","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Done.js":"7","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\SendDone.js":"8"},{"size":197,"mtime":1608386868147,"results":"9","hashOfConfig":"10"},{"size":262,"mtime":1608374981442,"results":"11","hashOfConfig":"10"},{"size":1920,"mtime":1608377246722,"results":"12","hashOfConfig":"10"},{"size":3184,"mtime":1608388335488,"results":"13","hashOfConfig":"10"},{"size":1815,"mtime":1608375222775,"results":"14","hashOfConfig":"10"},{"size":1862,"mtime":1608375238816,"results":"15","hashOfConfig":"10"},{"size":1710,"mtime":1608382308433,"results":"16","hashOfConfig":"10"},{"size":844,"mtime":1608383674893,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1xjvqnr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\index.js",[],["39","40"],"C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\App.js",["41"],"import './App.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <>\n    <div>\n    <h1>To-Do App - Shlok Zanwar</h1>\n      <TodoList />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\TodoForm.js",[],"C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\TodoList.js",["42","43"],"C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Todo.js",["44","45"],"import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\n\r\nfunction Todo({todos, removeTodo, updateTodo, sendToDo , sendToDoing, sendToDone}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        todoList: true,\r\n        doing: false,\r\n        done:false,\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            todoList: true,\r\n            doing: false,\r\n            done:false,\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.todoList ? (\r\n            <div className={'todo-row'} key={index} >\r\n                <div key={todo.id}>\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <TiEdit \r\n                        onClick={() => setEdit({ id: todo.id, value: todo.text, todoList:true, doing:false, done:false })}\r\n                        className='edit-icon'\r\n                    />\r\n                    <FiSend\r\n                        onClick={() => sendToDoing(todo.id)}\r\n                    />\r\n                    <MdDoneAll\r\n                        onClick={() => sendToDone(todo.id)}\r\n                    />\r\n                    {/* <RiDeleteBin5Line \r\n                        onClick={() => removeTodo(todo.id)}\r\n                        \r\n                    /> */}\r\n                </div>\r\n            </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Todo\r\n","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Doing.js",["46","47","48"],"import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { MdArrowBack } from 'react-icons/md'\r\n\r\nfunction Doing({todos, removeTodo, updateTodo, sendToDo, sendToDoing, sendToDone}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        todoList: false,\r\n        doing: true,\r\n        done:false,\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            todoList: false,\r\n            doing: true,\r\n            done:false,\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.doing ? (\r\n            <div className={'todo-row'} key={index} >\r\n                <div key={todo.id}>\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <TiEdit \r\n                        onClick={() => setEdit({ id: todo.id, value: todo.text, todoList:false, doing:true, done:false })}\r\n                        className='edit-icon'\r\n                    />\r\n                    <MdArrowBack\r\n                        onClick={() => sendToDo(todo.id)}\r\n                    />\r\n                    <MdDoneAll\r\n                        onClick={() => sendToDone(todo.id)}\r\n                    />\r\n                    {/* <RiDeleteBin5Line \r\n                        onClick={() => removeTodo(todo.id)}\r\n                        \r\n                    /> */}\r\n                </div>\r\n            </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Doing\r\n","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\Done.js",["49","50","51"],"import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList'\r\nimport { RiDeleteBin5Line } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { MdDoneAll } from 'react-icons/md'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { MdArrowBack } from 'react-icons/md'\r\n\r\nfunction Done({todos, removeTodo, updateTodo, sendToDo, sendToDoing, sendToDone}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n        todoList: false,\r\n        doing: false,\r\n        done: true,\r\n    })\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n            todoList: false,\r\n            doing: false,\r\n            done: true,\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => todo.done ? (\r\n            <div className={'todo-row'} key={index} >\r\n                <div key={todo.id}>\r\n                    {todo.text}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <TiEdit \r\n                        onClick={() => setEdit({ id: todo.id, value: todo.text, todoList:false, doing:false, done:true })}\r\n                        className='edit-icon'\r\n                    />\r\n                    <MdArrowBack\r\n                        onClick={() => sendToDo(todo.id)}\r\n                    />\r\n                    <RiDeleteBin5Line \r\n                        onClick={() => removeTodo(todo.id)}\r\n                    />\r\n                </div>\r\n            </div>\r\n    ) : null )\r\n}\r\n\r\nexport default Done\r\n","C:\\Users\\princ\\Documents\\GitHub\\ToDo-App\\src\\components\\SendDone.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":16},{"ruleId":"56","severity":1,"message":"60","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":12},{"ruleId":"61","severity":1,"message":"62","line":23,"column":8,"nodeType":"63","endLine":23,"endColumn":15,"suggestions":"64"},{"ruleId":"56","severity":1,"message":"65","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":16},{"ruleId":"56","severity":1,"message":"66","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":26},{"ruleId":"56","severity":1,"message":"65","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":16},{"ruleId":"56","severity":1,"message":"66","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":26},{"ruleId":"56","severity":1,"message":"67","line":7,"column":10,"nodeType":"58","messageId":"59","endLine":7,"endColumn":16},{"ruleId":"56","severity":1,"message":"65","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":16},{"ruleId":"56","severity":1,"message":"68","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":19},{"ruleId":"56","severity":1,"message":"67","line":7,"column":10,"nodeType":"58","messageId":"59","endLine":7,"endColumn":16},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar","'Done' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveToLocalStorage'. Either include it or remove the dependency array.","ArrayExpression",["71"],"'TodoList' is defined but never used.","'RiDeleteBin5Line' is defined but never used.","'FiSend' is defined but never used.","'MdDoneAll' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [saveToLocalStorage, todos]",{"range":"74","text":"75"},[707,714],"[saveToLocalStorage, todos]"]